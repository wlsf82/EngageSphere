name: ci-cd

on:
  push:
    branches:
      - main

jobs:
  eslint:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Install modules
      run: npm install
    - name: Run ESLint
      run: npm run lint
  component-tests:
    needs: eslint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install frontend modules
        uses: cypress-io/github-action@v6
        with:
          install-command: npm run install:frontend
          runTests: false
      - name: Run frontend component tests ðŸ§ª
        uses: cypress-io/github-action@v6
        with:
          command: npm run test:frontend:component:cloud
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  gui-tests:
    needs: eslint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install backend modules
        uses: cypress-io/github-action@v6
        with:
          install-command: npm run install:backend
          runTests: false
      - name: Install frontend modules
        uses: cypress-io/github-action@v6
        with:
          install-command: npm run install:frontend
          runTests: false
      - name: Run frontend GUI tests ðŸ§ª
        uses: cypress-io/github-action@v6
        with:
          start: npm run start:frontend, npm run start:server
          command: npm run test:frontend:gui:cloud
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  api-tests:
    needs: eslint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install backend modules
        uses: cypress-io/github-action@v6
        with:
          install-command: npm run install:backend
          runTests: false
      - name: Run API tests ðŸ§ª
        uses: cypress-io/github-action@v6
        with:
          start: npm run start:server
          command: npm run test:api:cloud
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  deploy:
    needs: [component-tests, gui-tests, api-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}
  post-deployment-api-tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run API tests in production ðŸ§ª
        uses: cypress-io/github-action@v6
        env:
          API_URL_PROD: ${{ secrets.API_URL_PROD }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        with:
          command: npm run test:api:prod:cloud
  post-deployment-gui-tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run GUI tests in production ðŸ§ª
        uses: cypress-io/github-action@v6
        env:
          API_URL_PROD: ${{ secrets.API_URL_PROD }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        with:
          command: npm run test:frontend:gui:prod:cloud
